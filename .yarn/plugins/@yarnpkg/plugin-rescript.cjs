/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-rescript",
factory: function (require) {
var plugin;(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>l});const r=require("clipanion"),o=require("@yarnpkg/core"),n=require("@yarnpkg/cli"),s=require("@yarnpkg/fslib"),a=require("@yarnpkg/plugin-pnp");var i=function(e,t,r,o){var n,s=arguments.length,a=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(a=(s<3?n(a):s>3?n(t,r,a):n(t,r))||a);return s>3&&a&&Object.defineProperty(t,r,a),a};class c extends n.BaseCommand{constructor(){super(...arguments),this.realFs=new s.NodeFS}async execute(){let e=0;const t=await o.Configuration.find(this.context.cwd,this.context.plugins),{project:r,workspace:i}=await o.Project.find(t,this.context.cwd),c=await o.Cache.find(t);if(!i)throw new n.WorkspaceRequiredError(r.cwd,this.context.cwd);await r.restoreInstallState();const l=s.ppath.join(i.cwd,"bsconfig.json");if(!await this.realFs.existsPromise(l))return console.log("TODO: res init first"),1;const p=r.storedPackages.get(r.topLevelWorkspace.anchoredLocator.locatorHash),d=await this.realFs.readFilePromise(l,"utf8").then(JSON.parse),u=(e=>{const t=[];for(const n of e){const e=o.structUtils.parseIdent(n),s=p.dependencies.get(e.identHash),a=r.storedResolutions.get(s.descriptorHash);if(!a)throw new Error("Assertion failed: The resolution should have been registered");const i=r.storedPackages.get(a);if(!i)throw new Error("Assertion failed: The package should have been registered");t.push(i)}return t})(["rescript",...d["bs-dependencies"]||[],...d["bs-dev-dependencies"]||[],...(d["ppx-flags"]||[]).map(e=>Array.isArray(e)?e[0]:e).map(e=>e.split("/").slice(0,-1).slice(0,2).join("/"))]);if(e=(await o.StreamReport.start({configuration:t,stdout:this.context.stdout,json:this.json},async e=>{let t=!1;for(const e of u){const{version:n}=e,s=r.topLevelWorkspace.manifest.ensureDependencyMeta(o.structUtils.makeDescriptor(e,n));s.unplugged||(s.unplugged=!0,t=!0)}t&&(await r.topLevelWorkspace.persistManifest(),e.reportSeparator(),await r.linkEverything({cache:c,report:e}))})).exitCode(),0!==e)return e;const h=s.ppath.join(r.cwd,s.Filename.nodeModules);for(const e of u){const r=a.pnpUtils.getUnpluggedPath(e,{configuration:t}),n=o.structUtils.stringifyIdent(e),i=s.ppath.join(r,s.Filename.nodeModules,n),c=s.ppath.join(h,n);await this.realFs.mkdirpPromise(s.ppath.dirname(c)),await this.linkPath(this.realFs,i,c)}return e}async linkPath(e,t,r){try{await e.symlinkPromise(t,r)}catch(o){if("EEXIST"!==(null==o?void 0:o.code))throw o;await e.unlinkPromise(r),await this.linkPath(e,t,r)}}}c.usage=r.Command.Usage({description:"Setup rescript dependencies"}),i([r.Command.Boolean("Format the output as an NDJSON stream")],c.prototype,"json",void 0),i([r.Command.Path("res","setup")],c.prototype,"execute",null);const l={hooks:{afterAllInstalled:async()=>{console.log("afterAllInstalled")}},commands:[c]};plugin=t})();
return plugin;
}
};